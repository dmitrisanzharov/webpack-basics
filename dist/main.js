(()=>{"use strict";const o={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let t;const r=new Uint8Array(16),n=[];for(let o=0;o<256;++o)n.push((o+256).toString(16).slice(1));console.log("123"),console.log("I don't trust stairs. They're always up to something."),console.log("random id",function(e,u,s){if(o.randomUUID&&!u&&!e)return o.randomUUID();const d=(e=e||{}).random??e.rng?.()??function(){if(!t){if("undefined"==typeof crypto||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");t=crypto.getRandomValues.bind(crypto)}return t(r)}();if(d.length<16)throw new Error("Random bytes length must be >= 16");if(d[6]=15&d[6]|64,d[8]=63&d[8]|128,u){if((s=s||0)<0||s+16>u.length)throw new RangeError(`UUID byte range ${s}:${s+15} is out of buffer bounds`);for(let o=0;o<16;++o)u[s+o]=d[o];return u}return function(o,t=0){return(n[o[t+0]]+n[o[t+1]]+n[o[t+2]]+n[o[t+3]]+"-"+n[o[t+4]]+n[o[t+5]]+"-"+n[o[t+6]]+n[o[t+7]]+"-"+n[o[t+8]]+n[o[t+9]]+"-"+n[o[t+10]]+n[o[t+11]]+n[o[t+12]]+n[o[t+13]]+n[o[t+14]]+n[o[t+15]]).toLowerCase()}(d)}())})();